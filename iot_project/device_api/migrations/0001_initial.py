# Generated by Django 5.2.2 on 2025-07-30 18:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('command_type', models.CharField(help_text="e.g., 'set_relay_state', 'turn_pump_on'", max_length=50)),
                ('parameters', models.JSONField(blank=True, help_text='Optional JSON parameters for the command', null=True)),
                ('executed', models.BooleanField(default=False, help_text='True if the device reported executing the command')),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('response', models.TextField(blank=True, help_text="Device's response to the command (optional)", null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_logs', to='core.device')),
            ],
            options={
                'verbose_name': 'Command Log',
                'verbose_name_plural': 'Command Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DeviceCommandQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_type', models.CharField(help_text='Command to be sent to device', max_length=50)),
                ('parameters', models.JSONField(blank=True, help_text='JSON parameters for the command', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_pending', models.BooleanField(default=True, help_text='True if command is waiting for device to poll')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_queue', to='core.device')),
            ],
            options={
                'verbose_name': 'Device Command in Queue',
                'verbose_name_plural': 'Device Command Queue',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField(help_text="JSON object containing sensor readings (e.g., {'voltage': 230, 'current': 1.5})")),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='core.device')),
            ],
            options={
                'verbose_name': 'Sensor Data',
                'verbose_name_plural': 'Sensor Data',
                'ordering': ['-timestamp'],
            },
        ),
    ]
